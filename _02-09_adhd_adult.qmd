## ADHD {#sec-adhd_adult}

{{< include _02-09_adhd_adult_text.qmd >}}

```{r}
#| label: setup-adhd_adult
#| include: false

# Source R6 classes
source("R/DomainProcessorR6.R")
source("R/NeuropsychResultsR6.R")
source("R/DotplotR6.R")
source("R/TableGT_Modified.R")

# Filter by domain
domains <- c("ADHD")

# Target phenotype
pheno <- "adhd_adult"

# Create R6 processor
processor_adhd_adult <- DomainProcessorR6$new(
  domains = domains,
  pheno = pheno,
  input_file = "data/neurobehav.parquet" # Note: Using neurobehav instead of neurocog
)

# Load and process data
processor_adhd_adult$load_data()
processor_adhd_adult$filter_by_domain()

# Create the data object with original name for compatibility
adhd_adult <- processor_adhd_adult$data
```

```{r}
#| label: export-adhd_adult
#| include: false
#| eval: true

# Process and export data using R6
processor_adhd_adult$select_columns()
processor_adhd_adult$save_data()

# Update the original object
adhd_adult <- processor_adhd_adult$data
```

```{r}
#| label: data-adhd_adult
#| include: false
#| eval: true

# Define the scales of interest for ADHD
scales <- c(
  "ADHD Index",
  "ADHD Probability",
  "ADHD Symptoms",
  "Attention Problems",
  "Attention-Deficit/Hyperactivity Problems",
  "Attentional Problems",
  "CAARS ADHD Index",
  "CAARS DSM-IV Hyperactive-Impulsive Symptoms",
  "CAARS DSM-IV Inattentive Symptoms",
  "CAARS DSM-IV Total ADHD Symptoms",
  "Conners ADHD Index",
  "DSM-5 ADHD",
  "DSM-5 Attention-Deficit/Hyperactivity Disorder",
  "DSM-IV ADHD",
  "DSM-IV Attention-Deficit/Hyperactivity Disorder",
  "DSM-IV Hyperactive-Impulsive",
  "DSM-IV Inattentive",
  "Hyperactive-Impulsive",
  "Hyperactivity",
  "Hyperactivity/Impulsivity",
  "Impulsivity",
  "Inattention",
  "Inattention/Memory Problems",
  "Inattentive"
)

# Filter the data directly without using NeurotypR
filter_data <- function(data, domain, scale) {
  # Filter by domain if provided
  if (!is.null(domain)) {
    data <- data[data$domain %in% domain, ]
  }

  # Filter by scale if provided
  if (!is.null(scale)) {
    data <- data[data$scale %in% scale, ]
  }

  return(data)
}

# Apply the filter function
data_adhd_adult <- filter_data(
  data = adhd_adult,
  domain = domains,
  scale = scales
)
```

```{r}
#| label: text-adhd_adult
#| cache: true
#| include: false

# Generate text using R6 class
results_processor <- NeuropsychResultsR6$new(
  data = data_adhd_adult,
  file = "_02-09_adhd_adult_text.qmd"
)
results_processor$process()
```

```{r}
#| label: qtbl-adhd_adult
#| include: false
#| eval: true

# Table parameters
table_name <- "table_adhd_adult"
vertical_padding <- 0
multiline <- TRUE

# Create table using our modified TableGT R6 class
table_gt <- TableGT_Modified$new(
  data = data_adhd_adult,
  pheno = pheno,
  table_name = table_name,
  vertical_padding = vertical_padding,
  source_note = "T-score: Mean = 50 [50th‰], SD ± 10 [16th‰, 84th‰]", # Note: Changed to T-score
  multiline = multiline
)

# Get the table object without automatic saving
tbl <- table_gt$build_table()

# Save the table using our save_table method
table_gt$save_table(tbl)
```

```{r}
#| label: fig-adhd_adult-subdomain
#| include: false
#| eval: true

# Create subdomain plot using R6 DotplotR6
dotplot_subdomain <- DotplotR6$new(
  data = data_adhd_adult,
  x = "z_mean_subdomain",
  y = "subdomain",
  filename = "fig_adhd_adult_subdomain.svg"
)
dotplot_subdomain$create_plot()
```

### Self-Report

{{< include _02-09_adhd_adult_text_self.qmd >}}

### Observer Report

{{< include _02-09_adhd_adult_text_observer.qmd >}}

::: {.typst-code}
```{=typst}
// Define a function to create a domain with a title, a table, and a figure
#let domain(title: none, file_qtbl, file_fig) = {
  let font = (font: "Roboto Slab", size: 0.7em)
  set text(..font)
  pad(top: 0.5em)[]
  grid(
    columns: (50%, 50%),
    gutter: 8pt,
    figure(
      [#image(file_qtbl)],
      caption: figure.caption(position: top, [#title]),
      kind: "qtbl",
      supplement: [*Table*],
    ),
    figure(
      [#image(file_fig, width: auto)],
      caption: figure.caption(
        position: bottom,
        [Performance across cognitive domains. #footnote[All scores in these figures have been standardized as z-scores.]],
      ),
      placement: none,
      kind: "image",
      supplement: [*Figure*],
      gap: 0.5em,
    ),
  )
}
```
:::

::: {.typst-code}
```{=typst}
// Define the title of the domain
#let title = "ADHD"

// Define the file name of the table
#let file_qtbl = "table_adhd_adult.png"

// Define the file name of the figure
#let file_fig = "fig_adhd_adult_subdomain.svg"

// The title is appended with ' Scores'
#domain(title: [#title Scores], file_qtbl, file_fig)
```
:::
