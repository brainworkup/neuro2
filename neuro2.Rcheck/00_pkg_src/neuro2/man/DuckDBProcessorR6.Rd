% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DuckDBProcessorR6.R
\name{DuckDBProcessorR6}
\alias{DuckDBProcessorR6}
\title{DuckDBProcessorR6 Class}
\description{
DuckDBProcessorR6 Class

DuckDBProcessorR6 Class
}
\details{
An R6 class that provides efficient data processing using DuckDB for neuropsychological data.
This class enables SQL-based querying without loading entire datasets into memory.
}
\section{Methods}{

\describe{
\item{initialize}{Initialize a new DuckDBProcessorR6 object with database connection.}
\item{connect}{Create or reconnect to the DuckDB database.}
\item{disconnect}{Close the database connection.}
\item{register_csv}{Register a CSV file as a virtual table.}
\item{register_all_csvs}{Register all CSV files in a directory.}
\item{query}{Execute a SQL query and return results.}
\item{query_lazy}{Create a lazy reference to a table for dplyr operations.}
\item{process_domain}{Process a specific domain using SQL.}
\item{calculate_z_stats}{Calculate z-score statistics using SQL.}
\item{export_to_r6}{Export query results to standard R6 processors.}
}
}

\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{con}}{DuckDB connection object}

\item{\code{db_path}}{Path to the DuckDB database file (default: in-memory)}

\item{\code{tables}}{List of registered tables in the database}

\item{\code{data_paths}}{List of paths to data files}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DuckDBProcessorR6-new}{\code{DuckDBProcessorR6$new()}}
\item \href{#method-DuckDBProcessorR6-connect}{\code{DuckDBProcessorR6$connect()}}
\item \href{#method-DuckDBProcessorR6-disconnect}{\code{DuckDBProcessorR6$disconnect()}}
\item \href{#method-DuckDBProcessorR6-register_csv}{\code{DuckDBProcessorR6$register_csv()}}
\item \href{#method-DuckDBProcessorR6-register_all_csvs}{\code{DuckDBProcessorR6$register_all_csvs()}}
\item \href{#method-DuckDBProcessorR6-query}{\code{DuckDBProcessorR6$query()}}
\item \href{#method-DuckDBProcessorR6-query_lazy}{\code{DuckDBProcessorR6$query_lazy()}}
\item \href{#method-DuckDBProcessorR6-process_domain}{\code{DuckDBProcessorR6$process_domain()}}
\item \href{#method-DuckDBProcessorR6-calculate_z_stats}{\code{DuckDBProcessorR6$calculate_z_stats()}}
\item \href{#method-DuckDBProcessorR6-export_to_r6}{\code{DuckDBProcessorR6$export_to_r6()}}
\item \href{#method-DuckDBProcessorR6-get_domain_summary}{\code{DuckDBProcessorR6$get_domain_summary()}}
\item \href{#method-DuckDBProcessorR6-create_indexes}{\code{DuckDBProcessorR6$create_indexes()}}
\item \href{#method-DuckDBProcessorR6-clone}{\code{DuckDBProcessorR6$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-new"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new DuckDBProcessorR6 object with database connection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$new(
  db_path = ":memory:",
  data_dir = "data",
  auto_register = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{db_path}}{Path to DuckDB database file (default: ":memory:" for in-memory)}

\item{\code{data_dir}}{Directory containing CSV files (default: "data")}

\item{\code{auto_register}}{Whether to automatically register all CSVs (default: TRUE)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new DuckDBProcessorR6 object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-connect"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-connect}{}}}
\subsection{Method \code{connect()}}{
Create or reconnect to the DuckDB database.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$connect()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns self for method chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-disconnect"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-disconnect}{}}}
\subsection{Method \code{disconnect()}}{
Close the database connection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$disconnect()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns self for method chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-register_csv"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-register_csv}{}}}
\subsection{Method \code{register_csv()}}{
Register a CSV file as a virtual table in DuckDB.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$register_csv(file_path, table_name = NULL, options = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file_path}}{Path to the CSV file}

\item{\code{table_name}}{Name for the table (default: based on filename)}

\item{\code{options}}{Additional CSV reading options}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns self for method chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-register_all_csvs"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-register_all_csvs}{}}}
\subsection{Method \code{register_all_csvs()}}{
Register all CSV files in a directory.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$register_all_csvs(data_dir = "data", pattern = "*.csv")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_dir}}{Directory containing CSV files}

\item{\code{pattern}}{File pattern to match (default: "*.csv")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns self for method chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-query"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-query}{}}}
\subsection{Method \code{query()}}{
Execute a SQL query and return results.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$query(query, params = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{query}}{SQL query string}

\item{\code{params}}{Named list of parameters for parameterized queries}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Query results as a data frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-query_lazy"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-query_lazy}{}}}
\subsection{Method \code{query_lazy()}}{
Create a lazy reference to a table for dplyr operations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$query_lazy(table_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{table_name}}{Name of the table}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A dplyr tbl object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-process_domain"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-process_domain}{}}}
\subsection{Method \code{process_domain()}}{
Process a specific domain using SQL.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$process_domain(domain, data_type = "neurocog", scales = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{domain}}{Domain name to process}

\item{\code{data_type}}{Type of data ("neurocog", "neurobehav", or "validity")}

\item{\code{scales}}{Optional vector of scales to include}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Processed data for the domain
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-calculate_z_stats"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-calculate_z_stats}{}}}
\subsection{Method \code{calculate_z_stats()}}{
Calculate z-score statistics using SQL.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$calculate_z_stats(table_name, group_vars)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{table_name}}{Table to process}

\item{\code{group_vars}}{Vector of grouping variables}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Data with calculated z-score statistics
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-export_to_r6"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-export_to_r6}{}}}
\subsection{Method \code{export_to_r6()}}{
Export query results to standard R6 processors.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$export_to_r6(domain, processor_class = "DomainProcessorR6")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{domain}}{Domain to export}

\item{\code{processor_class}}{R6 class to use (default: DomainProcessorR6)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 processor object with the data
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-get_domain_summary"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-get_domain_summary}{}}}
\subsection{Method \code{get_domain_summary()}}{
Get domain summary statistics using SQL.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$get_domain_summary(include_all = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_all}}{Whether to include all domains (default: TRUE)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Summary statistics by domain
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-create_indexes"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-create_indexes}{}}}
\subsection{Method \code{create_indexes()}}{
Create optimized indexes for faster queries.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$create_indexes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns self for method chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuckDBProcessorR6-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DuckDBProcessorR6-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuckDBProcessorR6$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
