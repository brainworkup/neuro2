---
title: NEUROCOGNITIVE EXAMINATION
patient: Biggie
name: Smalls, Biggie
doe: "YYYY-MM-DD"
date_of_report: last-modified
---

```{r}
#| label: setup
#| include: false
#| cache: false

# Load required packages
suppressPackageStartupMessages({
  library(dplyr)
  library(readr)
  library(here)
  library(yaml)
  library(neuro2)
  neuro2::setup_neuro2()
})

# Set knitr options
knitr::opts_knit$set(
  width = 80,
  digits = 2,
  warnPartialMatchArgs = FALSE,
  crop = knitr::hook_pdfcrop,
  optipng = knitr::hook_optipng
)

# Enable chunk caching for faster re-renders
knitr::opts_chunk$set(cache = TRUE, autodep = TRUE, cache.comments = FALSE)

# Make render faster by default: skip regenerating assets if present,
# suppress verbose logging, and avoid PDF duplicates of tables
options(
  neuro2.skip_if_exists = TRUE,
  neuro2.verbose = FALSE,
  neuro2.tables.pdf = FALSE
)

# Set environment variables with default values
Sys.setenv(PATIENT = "{{< var patient >}}")
patient <- Sys.getenv("PATIENT")

# Prefer document fonts for figures (Source or IBM Plex)
pick_font <- function(candidates) {
  if (requireNamespace("systemfonts", quietly = TRUE)) {
    for (f in candidates) {
      ok <- FALSE
      try(
        {
          info <- systemfonts::font_info(family = f)
          ok <- is.data.frame(info) && nrow(info) > 0
        },
        silent = TRUE
      )
      if (ok) return(f)
    }
    return(utils::tail(candidates, 1))
  }
  candidates[[1]]
}

preferred_sans <- c("IBM Plex Sans", "Source Sans 3", "Helvetica", "Arial")
preferred_serif <- c(
  "IBM Plex Serif",
  "Source Serif 4",
  "Times",
  "Times New Roman"
)
preferred_mono <- c("IBM Plex Mono", "Menlo", "Courier")

sans_font <- pick_font(preferred_sans)
serif_font <- pick_font(preferred_serif)
mono_font <- pick_font(preferred_mono)

# Map svglite generics to selected families so SVG text uses them
options(
  svglite.system_fonts = list(
    sans = sans_font,
    serif = serif_font,
    mono = mono_font
  )
)

# Set ggplot2 default text family to the selected sans family
ggplot2::theme_set(
  ggplot2::theme_get() +
    ggplot2::theme(text = ggplot2::element_text(family = sans_font))
)
```

```{=typst}
#let case_number = [{{< var case_number >}}]
#let name = [{{< var last_name >}}, {{< var first_name >}}]
#let doe = [{{< var date_of_report >}}]
#let patient = [{{< var patient >}}]
#v(2em, weak: true)
#show block: set par(leading: 0.65em)
#block[
*CASE NUMBER:* #case_number \
*PATIENT NAME:* #name \
*DATE OF BIRTH:* {{< var dob >}}, Age {{< var age >}} \
*DATE(S) OF EXAM:* {{< var doe >}}, {{< var doe2 >}}, and {{< var doe3 >}} \
*DATE OF REPORT*: {{< var date_of_report >}} \
]
```
{{< include _00-00_tests.qmd >}}

{{< include _01-00_nse.qmd >}}

{{< include _01-01_behav_obs.qmd >}}

```{=typst}
= NEUROCOGNITIVE FINDINGS
```

<!-- Domain sections - dynamically included based on available data -->

{{< include _domains_to_include.qmd >}}

{{< pagebreak >}}

{{< include _03-00_sirf.qmd >}}

{{< include _03-00_sirf_text.qmd >}}

{{< include _03-01_recs.qmd >}}

{{< include _03-02_signature.qmd >}}

{{< pagebreak >}}

{{< include _03-03_appendix.qmd >}}
