## ADHD/Executive Functions {#sec-adhd-adult}

```{r}
#| label: setup-adhd-adult
#| include: false

# Load required packages
suppressPackageStartupMessages({
  library(here)
  library(tidyverse)
  library(gt)
  library(gtExtras)
  library(neuro2)
})

# Define domains
domains <- "ADHD"

# Load and process data
processor <- DomainProcessorR6$new(
  domains = domains,
  pheno = "adhd_adult",
  input_file = "data/neurobehav.parquet"
)

processor$load_data()
processor$filter_by_domain()
processor$select_columns()

# Main data object
adhd_adult_data <- processor$data

# Self-report
self <- c("FrSBe Self", "CEFI Self", "CAARS Self", "CAARS-2 Self", "PAI")
adhd_adult_data_self <- adhd_adult_data |> dplyr::filter(test_name %in% self)

# Observer ratings
observer <- c(
  "FrSBe Family",
  "CEFI Observer",
  "CAARS Observer",
  "CAARS-2 Observer"
)

adhd_adult_data_observer <- adhd_adult_data |>
  dplyr::filter(test_name %in% observer)
```

### SELF-REPORT

{{< include _02-09_adhd_adult_text_self.qmd >}}

```{r}
#| label: text-adhd-adult-self
#| cache: true
#| include: false

# Generate text using R6 class
if (nrow(adhd_adult_data_self) > 0) {
  results_processor <- NeuropsychResultsR6$new(
    data = adhd_adult_data_self,
    file = "_02-09_adhd_adult_text_self.qmd"
  )
  results_processor$process()
}
```

```{r}
#| label: qtbl-adhd-adult-self
#| include: false

if (nrow(adhd_adult_data_self) > 0) {
  # Generate table
  table_adhd_adult <- TableGTR6$new(
    data = adhd_adult_data_self,
    pheno = "adhd_adult",
    table_name = "table_adhd_adult_self",
    vertical_padding = 0
  )
  tbl <- table_adhd_adult$build_table()
  table_adhd_adult$save_table(tbl, dir = here::here('figs'))
}
```

```{r}
#| label: fig-adhd-adult-self-subdomain
#| include: false

if (nrow(adhd_adult_data_self) > 0) {
  # Generate subdomain figure
  if (
    all(c("z_mean_subdomain", "subdomain") %in% names(adhd_adult_data_self))
  ) {
    # Remove NA values for plotting
    data_subdomain <- adhd_adult_data_self[
      !is.na(adhd_adult_data_self$z_mean_subdomain) &
        !is.na(adhd_adult_data_self$subdomain),
    ]

    if (nrow(data_subdomain) > 0) {
      dotplot_subdomain <- DotplotR6$new(
        data = data_subdomain,
        x = "z_mean_subdomain",
        y = "subdomain",
        filename = here::here("figs", "fig_adhd_adult_self_subdomain.svg")
      )
      dotplot_subdomain$create_plot()
    }
  }
}
```

```{r}
#| label: fig-adhd-adult-self-narrow
#| include: false

if (nrow(adhd_adult_data_self) > 0) {
  # Generate narrow figure
  if (all(c("z_mean_narrow", "narrow") %in% names(adhd_adult_data_self))) {
    # Remove NA values for plotting
    data_narrow <- adhd_adult_data_self[
      !is.na(adhd_adult_data_self$z_mean_narrow) &
        !is.na(adhd_adult_data_self$narrow),
    ]

    if (nrow(data_narrow) > 0) {
      dotplot_narrow <- DotplotR6$new(
        data = data_narrow,
        x = "z_mean_narrow",
        y = "narrow",
        filename = here::here("figs", "fig_adhd_adult_self_narrow.svg")
      )
      dotplot_narrow$create_plot()
    }
  }
}
```

```{=typst}
#let domain(title: none, file_qtbl, file_fig) = {
  let font = (font: "Roboto Slab", size: 0.7em)
  set text(..font)

  show figure.caption: it => {
    context {
      let supplement = it.supplement
      let counter = it.counter.display(it.numbering)
      block[*#supplement #counter:* #it.body]
    }
  }

  pad(top: 0.5em)[]
  grid(
    columns: (50%, 50%),
    gutter: 8pt,
    figure(
      [#image(file_qtbl)],
      caption: figure.caption(position: top, [#title]),
      kind: "qtbl",
      supplement: [*Table*],
    ),
    figure(
      [#image(file_fig, width: auto)],
      caption: figure.caption(
        position: bottom,
        [Attention and executive functions are multidimensional concepts that contain several related processes. Both concepts require self-regulatory skills and have some common subprocesses; therefore, it is common to treat them together, or even to refer to both processes when talking about one or the other.],
      ),
      placement: none,
      kind: "image",
      supplement: [*Figure*],
      gap: 0.5em,
    ),
  )
}
```

```{=typst}
#let title = "ADHD/Executive Functions"
#let file_qtbl = "table_adhd_adult_self.png"
#let file_fig = "figs/fig_adhd_adult_self_subdomain.svg"
#domain(title: [#title Scores], file_qtbl, file_fig)
```

```{=typst}
#let title = "ADHD/Executive Functions"
#let file_qtbl = "figs/table_adhd_adult_self.png"
#let file_fig = "figs/fig_adhd_adult_self_narrow.svg"
#domain(title: [#title Scores], file_qtbl, file_fig)
```

### OBSERVER RATINGS

{{< include _02-09_adhd_adult_text_observer.qmd >}}

```{r}
#| label: text-adhd-adult-observer
#| cache: true
#| include: false

# Generate text using R6 class
if (nrow(adhd_adult_data_observer) > 0) {
  results_processor <- NeuropsychResultsR6$new(
    data = adhd_adult_data_observer,
    file = "_02-09_adhd_adult_text_observer.qmd"
  )
  results_processor$process()
}
```

```{r}
#| label: qtbl-adhd-adult-observer
#| include: false

if (nrow(adhd_adult_data_observer) > 0) {
  # Generate table
  table_adhd_adult2 <- TableGTR6$new(
    data = adhd_adult_data_observer,
    pheno = "adhd_adult",
    table_name = "table_adhd_adult_observer",
    vertical_padding = 0
  )
  tbl2 <- table_adhd_adult2$build_table()
  table_adhd_adult2$save_table(tbl2, dir = here::here('figs'))
}
```

```{r}
#| label: fig-adhd-adult-observer-subdomain
#| include: false

if (nrow(adhd_adult_data_observer) > 0) {
  # Generate subdomain figure
  if (
    all(c("z_mean_subdomain", "subdomain") %in% names(adhd_adult_data_observer))
  ) {
    # Remove NA values for plotting
    data_subdomain <- adhd_adult_data_observer[
      !is.na(adhd_adult_data_observer$z_mean_subdomain) &
        !is.na(adhd_adult_data_observer$subdomain),
    ]

    if (nrow(data_subdomain) > 0) {
      dotplot_subdomain <- DotplotR6$new(
        data = data_subdomain,
        x = "z_mean_subdomain",
        y = "subdomain",
        filename = here::here("figs", "fig_adhd_adult_observer_subdomain.svg")
      )
      dotplot_subdomain$create_plot()
    }
  }
}
```

```{r}
#| label: fig-adhd-adult-observer-narrow
#| include: false

if (nrow(adhd_adult_data_observer) > 0) {
  # Generate narrow figure
  if (all(c("z_mean_narrow", "narrow") %in% names(adhd_adult_data_observer))) {
    # Remove NA values for plotting
    data_narrow <- adhd_adult_data_observer[
      !is.na(adhd_adult_data_observer$z_mean_narrow) &
        !is.na(adhd_adult_data_observer$narrow),
    ]

    if (nrow(data_narrow) > 0) {
      dotplot_narrow <- DotplotR6$new(
        data = data_narrow,
        x = "z_mean_narrow",
        y = "narrow",
        filename = here::here("figs", "fig_adhd_adult_observer_narrow.svg")
      )
      dotplot_narrow$create_plot()
    }
  }
}
```

```{=typst}
#let domain(title: none, file_qtbl, file_fig) = {
  let font = (font: "Roboto Slab", size: 0.7em)
  set text(..font)

  show figure.caption: it => {
    context {
      let supplement = it.supplement
      let counter = it.counter.display(it.numbering)
      block[*#supplement #counter:* #it.body]
    }
  }

  pad(top: 0.5em)[]
  grid(
    columns: (50%, 50%),
    gutter: 8pt,
    figure(
      [#image(file_qtbl)],
      caption: figure.caption(position: top, [#title]),
      kind: "qtbl",
      supplement: [*Table*],
    ),
    figure(
      [#image(file_fig, width: auto)],
      caption: figure.caption(
        position: bottom,
        [Attention and executive functions are multidimensional concepts that contain several related processes. Both concepts require self-regulatory skills and have some common subprocesses; therefore, it is common to treat them together, or even to refer to both processes when talking about one or the other.],
      ),
      placement: none,
      kind: "image",
      supplement: [*Figure*],
      gap: 0.5em,
    ),
  )
}
```

```{=typst}
#let title = "ADHD/Executive Functions"
#let file_qtbl = "figs/table_adhd_adult_observer.png"
#let file_fig = "figs/fig_adhd_adult_observer_subdomain.svg"
#domain(title: [#title Scores], file_qtbl, file_fig)
```

```{=typst}
#let title = "ADHD/Executive Functions"
#let file_qtbl = "figs/table_adhd_adult_observer.png"
#let file_fig = "figs/fig_adhd_adult_observer_narrow.svg"
#domain(title: [#title Scores], file_qtbl, file_fig)
```
