# SUMMARY/IMPRESSION {#sec-sirf}

{{< include _03-00_sirf_text.qmd >}}

```{r}
#| label: setup-sirf
#| include: false

# Load arrow package for parquet file support
library(arrow)

# Source R6 classes
source("R/DomainProcessorR6.R")
source("R/ReportTemplateR6.R")
source("R/NeuropsychReportSystemR6.R")
source("R/DotplotR6.R")

# Function to read data in available format
read_data <- function(base_path) {
  if (file.exists(paste0(base_path, ".parquet"))) {
    return(arrow::read_parquet(paste0(base_path, ".parquet")))
  } else if (file.exists(paste0(base_path, ".csv"))) {
    return(readr::read_csv(paste0(base_path, ".csv")))
  } else if (file.exists(paste0(base_path, ".feather"))) {
    return(arrow::read_feather(paste0(base_path, ".feather")))
  } else {
    stop(paste("No data file found for", base_path))
  }
}

# Load all domain data
neurocog <- read_data("data/neurocog")

# # Define domain variables explicitly to avoid the "object not found" error
# domain_iq <- "General Cognitive Ability"
# domain_academics <- "Academic Skills"
# domain_verbal <- "Verbal/Language"
# domain_spatial <- "Visual Perception/Construction"
# domain_memory <- "Memory"
# domain_executive <- "Attention/Executive"
# domain_motor <- "Motor"
# domain_social <- "Social Cognition"
# domain_adhd_adult <- "ADHD Adult"
# domain_adhd_child <- "ADHD Child"
# domain_emotion_adult <- c(
#   "Psychiatric Disorders",
#   "Personality Disorders",
#   "Substance Use",
#   "Psychosocial Problems",
#   "Behavioral/Emotional/Social",
#   "Emotional/Behavioral/Personality"
# )
# domain_emotion_child <- c(
#   "Psychiatric Disorders",
#   "Personality Disorders",
#   "Substance Use",
#   "Psychosocial Problems",
#   "Behavioral/Emotional/Social"
# )
# domain_adaptive <- "Adaptive Functioning"
# domain_daily_living <- "Daily Living"

# Create report system for overall summary
report_system <- NeuropsychReportSystemR6$new(
  config = list(patient = patient, domains = unique(neurocog$domain))
)
```

```{r}
#| label: fig-sirf-overall
#| fig-cap: "Overall cognitive profile across all domains"
#| include: false

# Create overall summary plot
domain_summary <- neurocog |>
  dplyr::group_by(domain) |>
  dplyr::summarize(
    mean_z = mean(z, na.rm = TRUE),
    mean_percentile = mean(percentile, na.rm = TRUE)
  ) |>
  dplyr::filter(!is.na(mean_z))

# Create plot using R6 DotplotR6
overall_plot <- DotplotR6$new(
  data = domain_summary,
  x = "mean_z",
  y = "domain",
  filename = "fig_sirf_overall.svg",
  theme = "fivethirtyeight",
  point_size = 8
)
overall_plot$create_plot()
```

```{=typst}
#let domain(file_fig) = {
  let font = (font: "Roboto Slab", size: 0.7em)
  set text(..font)
  figure(
    [#image(file_fig, width: 85%)],
    placement: none,
    caption: figure.caption(
      position: bottom,
      [Overall neurocognitive function subdomain plots of the patient's strengths and weaknesses. _Note:_ _z_-scores have a mean of 0 and a standard deviation of 1.],
    ),
    kind: "image",
    supplement: [Figure],
    gap: 0.5em,
  )
}
```

```{=typst}
#let file_fig = "fig_sirf_overall.svg"
#domain(file_fig)
```
