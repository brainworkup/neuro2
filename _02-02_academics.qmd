## Academic Skills {#sec-academics}

{{< include _02-02_academics_text.qmd >}}

```{r}
#| label: setup-academics
#| include: false

# Source R6 classes
source("R/DomainProcessorR6.R")
source("R/NeuropsychResultsR6.R")
source("R/DotplotR6.R")
source("R/TableGT_Modified.R")

# Filter by domain
domains <- c("Academic Skills")

# Target phenotype
pheno <- "academics"

# Create R6 processor
processor_academics <- DomainProcessorR6$new(
  domains = domains,
  pheno = pheno,
  input_file = "data/neurocog.parquet"
)

# Load and process data
processor_academics$load_data()
processor_academics$filter_by_domain()

# Create the data object with original name for compatibility
academics <- processor_academics$data
```

```{r}
#| label: export-academics
#| include: false
#| eval: true

# Process and export data using R6
processor_academics$select_columns()
processor_academics$save_data()

# Update the original object
academics <- processor_academics$data
```

```{r}
#| label: data-academics
#| include: false
#| eval: true

# Define the scales of interest for academic skills
scales <- c(
  "Academic Fluency",
  "Basic Reading",
  "Math Calculation",
  "Math Fluency",
  "Math Problem Solving",
  "Mathematics",
  "Numerical Operations",
  "Oral Reading Fluency",
  "Pseudoword Decoding",
  "Reading",
  "Reading Comprehension",
  "Reading Fluency",
  "Sentence Comprehension",
  "Spelling",
  "Word Reading",
  "Written Expression",
  "Written Language"
)

# Filter the data directly without using NeurotypR
filter_data <- function(data, domain, scale) {
  # Filter by domain if provided
  if (!is.null(domain)) {
    data <- data[data$domain %in% domain, ]
  }

  # Filter by scale if provided
  if (!is.null(scale)) {
    data <- data[data$scale %in% scale, ]
  }

  return(data)
}

# Apply the filter function
data_academics <- filter_data(
  data = academics,
  domain = domains,
  scale = scales
)
```

```{r}
#| label: text-academics
#| cache: true
#| include: false

# Generate text using R6 class
results_processor <- NeuropsychResultsR6$new(
  data = data_academics,
  file = "_02-02_academics_text.qmd"
)
results_processor$process()
```

```{r}
#| label: qtbl-academics
#| include: false
#| eval: true

# Table parameters
table_name <- "table_academics"
vertical_padding <- 0
multiline <- TRUE

# Create table using our modified TableGT R6 class
table_gt <- TableGT_Modified$new(
  data = data_academics,
  pheno = pheno,
  table_name = table_name,
  vertical_padding = vertical_padding,
  source_note = "Standard score: Mean = 100 [50th‰], SD ± 15 [16th‰, 84th‰]",
  multiline = multiline
)

# Get the table object without automatic saving
tbl <- table_gt$build_table()

# Save the table using our save_table method
table_gt$save_table(tbl)
```

```{r}
#| label: fig-academics-subdomain
#| include: false
#| eval: true

# Create subdomain plot using R6 DotplotR6
dotplot_subdomain <- DotplotR6$new(
  data = data_academics,
  x = "z_mean_subdomain",
  y = "subdomain",
  filename = "fig_academics_subdomain.svg"
)
dotplot_subdomain$create_plot()
```


```{=typst}
// Define a function to create a domain with a title, a table, and a figure
#let domain(title: none, file_qtbl, file_fig) = {
  let font = (font: "Roboto Slab", size: 0.7em)
  set text(..font)
  pad(top: 0.5em)[]
  grid(
    columns: (50%, 50%),
    gutter: 8pt,
    figure(
      [#image(file_qtbl)],
      caption: figure.caption(position: top, [#title]),
      kind: "qtbl",
      supplement: [*Table*],
    ),
    figure(
      [#image(file_fig, width: auto)],
      caption: figure.caption(
        position: bottom,
        [Performance across cognitive domains. #footnote[All scores in these figures have been standardized as z-scores.]],
      ),
      placement: none,
      kind: "image",
      supplement: [*Figure*],
      gap: 0.5em,
    ),
  )
}
```



```{=typst}
// Define the title of the domain
#let title = "Academic Skills"

// Define the file name of the table
#let file_qtbl = "table_academics.png"

// Define the file name of the figure
#let file_fig = "fig_academics_subdomain.svg"

// The title is appended with ' Scores'
#domain(title: [#title Scores], file_qtbl, file_fig)
```
