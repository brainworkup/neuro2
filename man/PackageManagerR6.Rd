% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PackageManagerR6-doc.R, R/PackageManagerR6.R
\docType{class}
\name{PackageManagerR6}
\alias{PackageManagerR6}
\title{Package Manager for neuro2 (documentation stub)}
\format{
An R6 class generator object.

An R6 class object
}
\value{
Methods typically return the manager invisibly for chaining; query helpers return character vectors.
}
\description{
R6 class to manage dependency installation, loading, version checks,
and simple conflict reporting. This documentation file exists separately from the
implementation to satisfy roxygen2 checks.

Enhanced package management for neuro2.
Handles dependency installation, loading, and version checking.
}
\details{
PackageManagerR6 Class

PackageManagerR6 Class
}
\section{Public fields}{

\describe{
\item{\code{required_packages}}{Named list of required package groups.}
\item{\code{optional_packages}}{Named list of optional package groups.}
\item{\code{loaded_packages}}{Character vector of successfully detected/loaded packages.}
\item{\code{failed_packages}}{Character vector of packages that failed to install or load.}
}
}

\section{Methods}{

\describe{
\item{\code{$initialize()}}{Construct the manager with default groups.}
\item{\code{$check_and_install(install_missing = FALSE, include_optional = TRUE, verbose = TRUE)}}{Check availability and optionally install.}
\item{\code{$check_package_group(packages, install_missing = FALSE, required = TRUE, verbose = TRUE)}}{Check a vector of packages.}
\item{\code{$check_single_package(pkg, install_missing = FALSE, verbose = TRUE)}}{Check/install a single package.}
\item{\code{$load_packages(packages = NULL, verbose = TRUE)}}{Call \code{library()} on a set of packages.}
\item{\code{$show_summary()}}{Print a summary of availability and failures.}
\item{\code{$get_missing_packages()}}{Return required packages not yet available.}
\item{\code{$install_missing_packages(verbose = TRUE)}}{Attempt to install any missing required packages.}
\item{\code{$check_conflicts(verbose = TRUE)}}{If \pkg{conflicted} is available, report conflicts.}
\item{\code{$create_package_loading_script(file = "load_packages.R")}}{Write a package-loading script for Quarto docs.}
}
}

\section{Parameters (for methods above)}{

\describe{
\item{\code{install_missing}}{Logical; install packages when not available.}
\item{\code{include_optional}}{Logical; also evaluate optional packages.}
\item{\code{verbose}}{Logical; print progress.}
\item{\code{packages}}{Character vector of package names.}
\item{\code{required}}{Logical; treat unavailability as an error when \code{TRUE}.}
\item{\code{pkg}}{Single package name.}
\item{\code{file}}{File path for the generated loading script.}
}
}

\examples{
\dontrun{
pm <- PackageManagerR6$new()
pm$check_and_install()
pm$load_packages()
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{required_packages}}{List of required package groups}

\item{\code{optional_packages}}{List of optional package groups}

\item{\code{loaded_packages}}{Character vector of successfully loaded packages}

\item{\code{failed_packages}}{Character vector of packages that failed to load}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PackageManagerR6-new}{\code{PackageManagerR6$new()}}
\item \href{#method-PackageManagerR6-check_and_install}{\code{PackageManagerR6$check_and_install()}}
\item \href{#method-PackageManagerR6-check_package_group}{\code{PackageManagerR6$check_package_group()}}
\item \href{#method-PackageManagerR6-check_single_package}{\code{PackageManagerR6$check_single_package()}}
\item \href{#method-PackageManagerR6-load_packages}{\code{PackageManagerR6$load_packages()}}
\item \href{#method-PackageManagerR6-show_summary}{\code{PackageManagerR6$show_summary()}}
\item \href{#method-PackageManagerR6-get_missing_packages}{\code{PackageManagerR6$get_missing_packages()}}
\item \href{#method-PackageManagerR6-install_missing_packages}{\code{PackageManagerR6$install_missing_packages()}}
\item \href{#method-PackageManagerR6-check_conflicts}{\code{PackageManagerR6$check_conflicts()}}
\item \href{#method-PackageManagerR6-create_package_loading_script}{\code{PackageManagerR6$create_package_loading_script()}}
\item \href{#method-PackageManagerR6-clone}{\code{PackageManagerR6$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-new"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-check_and_install"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-check_and_install}{}}}
\subsection{Method \code{check_and_install()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$check_and_install(
  install_missing = FALSE,
  include_optional = TRUE,
  verbose = TRUE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-check_package_group"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-check_package_group}{}}}
\subsection{Method \code{check_package_group()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$check_package_group(
  packages,
  install_missing = FALSE,
  required = TRUE,
  verbose = TRUE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-check_single_package"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-check_single_package}{}}}
\subsection{Method \code{check_single_package()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$check_single_package(
  pkg,
  install_missing = FALSE,
  verbose = TRUE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-load_packages"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-load_packages}{}}}
\subsection{Method \code{load_packages()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$load_packages(packages = NULL, verbose = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-show_summary"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-show_summary}{}}}
\subsection{Method \code{show_summary()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$show_summary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-get_missing_packages"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-get_missing_packages}{}}}
\subsection{Method \code{get_missing_packages()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$get_missing_packages()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-install_missing_packages"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-install_missing_packages}{}}}
\subsection{Method \code{install_missing_packages()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$install_missing_packages(verbose = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-check_conflicts"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-check_conflicts}{}}}
\subsection{Method \code{check_conflicts()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$check_conflicts(verbose = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-create_package_loading_script"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-create_package_loading_script}{}}}
\subsection{Method \code{create_package_loading_script()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$create_package_loading_script(file = "load_packages.R")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
