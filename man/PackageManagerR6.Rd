% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PackageManagerR6.R
\docType{class}
\name{PackageManagerR6}
\alias{PackageManagerR6}
\title{Package Manager for neuro2}
\format{
An R6 class object
}
\description{
Enhanced package management for neuro2.
Handles dependency installation, loading, and version checking.
}
\details{
PackageManagerR6 Class
}
\section{Methods}{

\describe{
\item{\code{$initialize}}{See method docs below.}
\item{\code{$check_and_install}}{See method docs below.}
\item{\code{$check_package_group}}{See method docs below.}
\item{\code{$check_single_package}}{See method docs below.}
\item{\code{$load_packages}}{See method docs below.}
\item{\code{$show_summary}}{See method docs below.}
\item{\code{$get_missing_packages}}{See method docs below.}
\item{\code{$install_missing_packages}}{See method docs below.}
\item{\code{$check_conflicts}}{See method docs below.}
\item{\code{$create_package_loading_script}}{See method docs below.}
}
}

\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{required_packages}}{List of required package groups}

\item{\code{optional_packages}}{List of optional package groups}

\item{\code{loaded_packages}}{Character vector of successfully loaded packages}

\item{\code{failed_packages}}{Character vector of packages that failed to load}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PackageManagerR6-new}{\code{PackageManagerR6$new()}}
\item \href{#method-PackageManagerR6-check_and_install}{\code{PackageManagerR6$check_and_install()}}
\item \href{#method-PackageManagerR6-check_package_group}{\code{PackageManagerR6$check_package_group()}}
\item \href{#method-PackageManagerR6-check_single_package}{\code{PackageManagerR6$check_single_package()}}
\item \href{#method-PackageManagerR6-load_packages}{\code{PackageManagerR6$load_packages()}}
\item \href{#method-PackageManagerR6-show_summary}{\code{PackageManagerR6$show_summary()}}
\item \href{#method-PackageManagerR6-get_missing_packages}{\code{PackageManagerR6$get_missing_packages()}}
\item \href{#method-PackageManagerR6-install_missing_packages}{\code{PackageManagerR6$install_missing_packages()}}
\item \href{#method-PackageManagerR6-check_conflicts}{\code{PackageManagerR6$check_conflicts()}}
\item \href{#method-PackageManagerR6-create_package_loading_script}{\code{PackageManagerR6$create_package_loading_script()}}
\item \href{#method-PackageManagerR6-clone}{\code{PackageManagerR6$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-new"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-new}{}}}
\subsection{Method \code{new()}}{
Constructor. Initialize the package manager with config and optional groups.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$new()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{Optional configuration object for package management.}

\item{\code{package_groups}}{Optional named list mapping group names to vectors of package names.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new PackageManagerR6 object (invisible).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-check_and_install"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-check_and_install}{}}}
\subsection{Method \code{check_and_install()}}{
Check required packages (and groups) and install any that are missing.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$check_and_install(
  install_missing = FALSE,
  include_optional = TRUE,
  verbose = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{install_missing}}{Logical; if TRUE, install any missing packages.}

\item{\code{include_optional}}{Logical; include optional (non-required) groups/packages if TRUE.}

\item{\code{verbose}}{Logical; print detailed progress messages if TRUE.}

\item{\code{groups}}{Optional character vector of group names to check; NULL = all defined groups.}

\item{\code{ask}}{Logical; if TRUE, interactively confirm before installing.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns self.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-check_package_group"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-check_package_group}{}}}
\subsection{Method \code{check_package_group()}}{
Check availability of all packages in a named group.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$check_package_group(
  packages,
  install_missing = FALSE,
  required = TRUE,
  verbose = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{packages}}{Character vector of package names.}

\item{\code{install_missing}}{Logical; if TRUE, install any missing packages.}

\item{\code{required}}{Logical or character; if provided, restrict to required packages or a subset.}

\item{\code{verbose}}{Logical; print detailed progress messages if TRUE.}

\item{\code{group}}{Character name of the package group.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical; TRUE if all packages in the group are available.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-check_single_package"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-check_single_package}{}}}
\subsection{Method \code{check_single_package()}}{
Check whether a single package is installed and loadable.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$check_single_package(
  pkg,
  install_missing = FALSE,
  verbose = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pkg}}{Character name of the package.}

\item{\code{install_missing}}{Logical; if TRUE, install any missing packages.}

\item{\code{verbose}}{Logical; print detailed progress messages if TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical; TRUE if package is available.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-load_packages"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-load_packages}{}}}
\subsection{Method \code{load_packages()}}{
Load one or more packages, optionally by group.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$load_packages(packages = NULL, verbose = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{packages}}{Character vector of package names to load (ignored if \code{groups} provided).}

\item{\code{verbose}}{Logical; print detailed progress messages if TRUE.}

\item{\code{groups}}{Optional character vector of package groups to load.}

\item{\code{quiet}}{Logical; if TRUE, suppress startup messages.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns self.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-show_summary"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-show_summary}{}}}
\subsection{Method \code{show_summary()}}{
Display a summary of package availability, versions, and groups.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$show_summary()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns self.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-get_missing_packages"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-get_missing_packages}{}}}
\subsection{Method \code{get_missing_packages()}}{
Return a character vector of missing packages across provided groups (or all).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$get_missing_packages()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{Optional character vector of group names; NULL = all.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character vector of missing package names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-install_missing_packages"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-install_missing_packages}{}}}
\subsection{Method \code{install_missing_packages()}}{
Install missing packages (optionally restricted to groups).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$install_missing_packages(verbose = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Logical; print detailed progress messages if TRUE.}

\item{\code{groups}}{Optional character vector of group names; NULL = all.}

\item{\code{repos}}{CRAN repos URL or vector passed to install.packages().}

\item{\code{upgrade}}{Logical or 'never'/'always' as used by package managers; upgrade if TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns self.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-check_conflicts"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-check_conflicts}{}}}
\subsection{Method \code{check_conflicts()}}{
Check for function name conflicts across loaded packages.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$check_conflicts(verbose = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Logical; print detailed progress messages if TRUE.}

\item{\code{packages}}{Optional character vector; if NULL, check currently loaded packages.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.frame (or list) describing conflicts.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-create_package_loading_script"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-create_package_loading_script}{}}}
\subsection{Method \code{create_package_loading_script()}}{
Write a helper R script that loads required packages/groups for reproducible environments.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$create_package_loading_script(file = "load_packages.R")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{Output path for the generated loading script file.}

\item{\code{path}}{Output path to write the .R script.}

\item{\code{groups}}{Optional character vector of groups to include; NULL = all.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Path to the created script (character).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PackageManagerR6-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PackageManagerR6-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PackageManagerR6$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
