% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TemplateContentManagerR6.R
\name{TemplateContentManagerR6}
\alias{TemplateContentManagerR6}
\title{Template Content Manager for Neuropsychological Reports}
\description{
An R6 class that manages Quarto template content for neuropsychological report generation.
This class provides functionality to access and organize template sections used in
constructing comprehensive neuropsychological assessment reports.
}
\details{
The TemplateContentManagerR6 class scans a specified directory for template files (Quarto .qmd files
with names starting with underscore), categorizes them by section type based on filename
prefixes, and provides methods to access their content. This facilitates modular report
construction by allowing selective inclusion of sections based on assessment needs.

The class categorizes template files into sections:
\itemize{
\item Tests (_00*): Test descriptions and administration details
\item NSE (Neurobehavioral Status Exam) (_01*): Clinical interview and behavioral observations
\item Domains (_02*): Cognitive domain assessments (memory, attention, etc.)
\item Conclusions (_03*): Summary, diagnostic impressions, and recommendations
}
}
\examples{
# Example 1: Initialize and list available sections
template_mgr <- TemplateContentManagerR6$new()
sections <- template_mgr$get_available_sections()
print(sections$domains) # List available domain templates

# Example 2: Retrieve content from a specific template file
template_mgr <- TemplateContentManagerR6$new(
  template_dir = "inst/extdata/_extensions/neurotyp-adult"
)
iq_content <- template_mgr$get_content("_02-01_iq.qmd")
if (!is.null(iq_content)) {
  # Process or display the IQ section content
  cat(paste(head(iq_content, 10), collapse = "\n"))
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{template_dir}}{Character string specifying the directory containing template files}

\item{\code{content_files}}{Character vector of template filenames found in the template directory}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TemplateContentManagerR6-new}{\code{TemplateContentManagerR6$new()}}
\item \href{#method-TemplateContentManagerR6-refresh_content_list}{\code{TemplateContentManagerR6$refresh_content_list()}}
\item \href{#method-TemplateContentManagerR6-get_content}{\code{TemplateContentManagerR6$get_content()}}
\item \href{#method-TemplateContentManagerR6-get_available_sections}{\code{TemplateContentManagerR6$get_available_sections()}}
\item \href{#method-TemplateContentManagerR6-clone}{\code{TemplateContentManagerR6$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemplateContentManagerR6-new"></a>}}
\if{latex}{\out{\hypertarget{method-TemplateContentManagerR6-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new TemplateContentManagerR6 object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemplateContentManagerR6$new(
  template_dir = "inst/quarto/templates/typst-report"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{template_dir}}{Character string specifying the directory containing template files
(default: "inst/quarto/templates/typst-report")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{TemplateContentManagerR6} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemplateContentManagerR6-refresh_content_list"></a>}}
\if{latex}{\out{\hypertarget{method-TemplateContentManagerR6-refresh_content_list}{}}}
\subsection{Method \code{refresh_content_list()}}{
Scan the template directory and update the list of available content files
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemplateContentManagerR6$refresh_content_list()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This method scans the template directory for Quarto files (pattern "^_.*\\.qmd$")
and updates the content_files field with the list of available templates.
It is called automatically during initialization and can be called again
if the template directory contents change.
}

\subsection{Returns}{
Invisibly returns the TemplateContentManagerR6 object (for method chaining)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemplateContentManagerR6-get_content"></a>}}
\if{latex}{\out{\hypertarget{method-TemplateContentManagerR6-get_content}{}}}
\subsection{Method \code{get_content()}}{
Retrieve the content of a specific template file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemplateContentManagerR6$get_content(file_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file_name}}{Character string specifying the filename to retrieve (without path)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character vector containing the lines of the file if found, NULL otherwise
with a warning
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemplateContentManagerR6-get_available_sections"></a>}}
\if{latex}{\out{\hypertarget{method-TemplateContentManagerR6-get_available_sections}{}}}
\subsection{Method \code{get_available_sections()}}{
Get a categorized list of available template sections
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemplateContentManagerR6$get_available_sections()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This method organizes the available template files into four categories based on
their filename prefixes:
\itemize{
\item tests: Files starting with "_00" (test descriptions)
\item nse: Files starting with "_01" (neurobehavioral status exam)
\item domains: Files starting with "_02" (cognitive domains)
\item conclusions: Files starting with "_03" (conclusions and recommendations)
}
}

\subsection{Returns}{
A list with four named elements (tests, nse, domains, conclusions),
each containing character vectors of filenames
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemplateContentManagerR6-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TemplateContentManagerR6-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemplateContentManagerR6$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
