% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Neuro2MainR6.R
\docType{class}
\name{Neuro2MainR6}
\alias{Neuro2MainR6}
\title{Main Orchestrator for Neuropsychological Reports}
\format{
An R6 class object
}
\description{
Streamlined main orchestrator for neuropsychological report generation.
Provides a simple, user-friendly interface that handles complexity internally.
}
\details{
Neuro2MainR6 Class
}
\section{Methods}{

\describe{
\item{\code{$initialize}}{See method docs below.}
\item{\code{$setup}}{See method docs below.}
\item{\code{$check_environment}}{See method docs below.}
\item{\code{$load_data}}{See method docs below.}
\item{\code{$process_domains}}{See method docs below.}
\item{\code{$.process_single_domain}}{See method docs below.}
\item{\code{$generate_report}}{See method docs below.}
\item{\code{$run_full_workflow}}{See method docs below.}
\item{\code{$detect_age_group}}{See method docs below.}
\item{\code{$validate_domains}}{See method docs below.}
\item{\code{$show_summary}}{See method docs below.}
\item{\code{$.get_available_domains}}{See method docs below.}
\item{\code{$get_status}}{See method docs below.}
}
}

\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{config}}{Configuration manager object}

\item{\code{error_handler}}{Error handler object}

\item{\code{factory}}{Domain processor factory object}

\item{\code{processors}}{List of domain processors}

\item{\code{status}}{Status tracking list}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Neuro2MainR6-new}{\code{Neuro2MainR6$new()}}
\item \href{#method-Neuro2MainR6-setup}{\code{Neuro2MainR6$setup()}}
\item \href{#method-Neuro2MainR6-check_environment}{\code{Neuro2MainR6$check_environment()}}
\item \href{#method-Neuro2MainR6-load_data}{\code{Neuro2MainR6$load_data()}}
\item \href{#method-Neuro2MainR6-process_domains}{\code{Neuro2MainR6$process_domains()}}
\item \href{#method-Neuro2MainR6-.process_single_domain}{\code{Neuro2MainR6$.process_single_domain()}}
\item \href{#method-Neuro2MainR6-generate_report}{\code{Neuro2MainR6$generate_report()}}
\item \href{#method-Neuro2MainR6-run_full_workflow}{\code{Neuro2MainR6$run_full_workflow()}}
\item \href{#method-Neuro2MainR6-detect_age_group}{\code{Neuro2MainR6$detect_age_group()}}
\item \href{#method-Neuro2MainR6-validate_domains}{\code{Neuro2MainR6$validate_domains()}}
\item \href{#method-Neuro2MainR6-show_summary}{\code{Neuro2MainR6$show_summary()}}
\item \href{#method-Neuro2MainR6-.get_available_domains}{\code{Neuro2MainR6$.get_available_domains()}}
\item \href{#method-Neuro2MainR6-get_status}{\code{Neuro2MainR6$get_status()}}
\item \href{#method-Neuro2MainR6-clone}{\code{Neuro2MainR6$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-new"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-new}{}}}
\subsection{Method \code{new()}}{
Constructor. Initialize the main orchestrator and supporting components.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$new(
  config_file = "config.yml",
  variables_file = "_variables.yml",
  verbose = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config_file}}{Path to config YAML file.}

\item{\code{variables_file}}{Path to auxiliary variables YAML.}

\item{\code{verbose}}{Optional logical to override \code{processing.verbose}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new Neuro2MainR6 object (invisible).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-setup"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-setup}{}}}
\subsection{Method \code{setup()}}{
Set up core components (config, factory, handlers), create output dirs, and validate environment.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$setup()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-check_environment"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-check_environment}{}}}
\subsection{Method \code{check_environment()}}{
Verify required packages, binaries, and directories are available.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$check_environment()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Logical; TRUE if environment is OK.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-load_data"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-load_data}{}}}
\subsection{Method \code{load_data()}}{
Load input data sources into memory or database (as configured).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$load_data(
  data_dir = NULL,
  use_duckdb = NULL,
  output_format = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_dir}}{Directory path where raw data files are located.}

\item{\code{use_duckdb}}{Logical; use DuckDB-backed loading if TRUE, otherwise in-memory.}

\item{\code{output_format}}{Character specifying the target format for loaded data (e.g., 'arrow', 'parquet').}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-process_domains"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-process_domains}{}}}
\subsection{Method \code{process_domains()}}{
Process all configured domains using the factory and store processors in \code{self$processors}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$process_domains(
  domains = NULL,
  age_group = NULL,
  include_multi_rater = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{domains}}{Optional character vector of domains to process (defaults from config).}

\item{\code{age_group}}{Optional character ('child' or 'adult') to control measure selection.}

\item{\code{include_multi_rater}}{Logical; if TRUE, include multi-rater behavioral measures.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-.process_single_domain"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-.process_single_domain}{}}}
\subsection{Method \code{.process_single_domain()}}{
Process a single domain and register its processor in \code{self$processors}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$.process_single_domain(processor, domain_key, rater = "self")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{processor}}{An existing domain processor instance to (re)use for this domain.}

\item{\code{domain_key}}{Character key identifying a domain variant (e.g., narrow domain id).}

\item{\code{rater}}{Optional rater label for behavioral measures (e.g., 'self','parent','teacher').}

\item{\code{domain}}{Domain name (character).}

\item{\code{age_group}}{Optional character ('child' or 'adult').}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The created/updated domain processor (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-generate_report"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-generate_report}{}}}
\subsection{Method \code{generate_report()}}{
Render the Quarto report using processed domain outputs and config.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$generate_report(
  template = NULL,
  output_file = NULL,
  format = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{template}}{Path to Quarto template (.qmd). If NULL, use config default.}

\item{\code{output_file}}{Output file path (e.g., 'report.html' or 'report.pdf').}

\item{\code{format}}{Output format for the rendered report (e.g., 'pdf','html','docx').}

\item{\code{execute}}{Logical; if TRUE, execute/knit the document.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Path to the generated report file (character).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-run_full_workflow"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-run_full_workflow}{}}}
\subsection{Method \code{run_full_workflow()}}{
Run the full workflow: setup, load data, process domains, and generate report.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$run_full_workflow(
  domains = NULL,
  age_group = NULL,
  load_data = TRUE,
  generate_report = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{domains}}{Optional character vector of domains.}

\item{\code{age_group}}{Optional character ('child' or 'adult').}

\item{\code{load_data}}{Logical; if TRUE, run the data loading step within the workflow.}

\item{\code{generate_report}}{Logical; if TRUE, render the report at the end of the workflow.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List or named list summarizing workflow results (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-detect_age_group"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-detect_age_group}{}}}
\subsection{Method \code{detect_age_group()}}{
Infer age group ('child'/'adult') from config or data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$detect_age_group()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character scalar: 'child' or 'adult'.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-validate_domains"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-validate_domains}{}}}
\subsection{Method \code{validate_domains()}}{
Validate requested domains against available/implemented domains.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$validate_domains(domains)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{domains}}{Character vector of requested domains.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character vector of valid domains.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-show_summary"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-show_summary}{}}}
\subsection{Method \code{show_summary()}}{
Print a concise summary of processed domains and output locations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$show_summary()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-.get_available_domains"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-.get_available_domains}{}}}
\subsection{Method \code{.get_available_domains()}}{
Return the vector of domains supported by the current factory/config.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$.get_available_domains()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character vector of domain names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-get_status"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-get_status}{}}}
\subsection{Method \code{get_status()}}{
Return internal status list (e.g., steps completed, timestamps).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$get_status()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list with status information.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
