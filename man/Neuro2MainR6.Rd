% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Neuro2MainR6-doc.R, R/Neuro2MainR6.R
\docType{class}
\name{Neuro2MainR6}
\alias{Neuro2MainR6}
\title{High-level facade for neuro2 workflow}
\format{
An R6 class generator object.

An R6 class object
}
\value{
Methods return the facade invisibly for chaining; queries return vectors/data frames
or lists describing the current state.
}
\description{
A thin R6 facade mirroring \code{MainOrchestratorR6} that offers a
simplified public interface for common operations (setup, load, process, report).

Streamlined main orchestrator for neuropsychological report generation.
Provides a simple, user-friendly interface that handles complexity internally.
}
\details{
Neuro2MainR6 Class

Neuro2MainR6 Class
}
\section{Methods}{

\describe{
\item{\code{$initialize(config_file = "config.yml", variables_file = NULL, verbose = TRUE)}}{Create a new facade instance.}
\item{\code{$setup()}}{Initialize dependencies and internal components.}
\item{\code{$check_environment()}}{Verify required packages and configuration.}
\item{\code{$load_data(data_dir = "data-raw/csv", use_duckdb = TRUE, output_format = c("parquet","arrow","csv"))}}{Load or register datasets.}
\item{\code{$process_domains(domains = NULL, age_group = c("child","adult"), include_multi_rater = TRUE)}}{Process requested domains.}
\item{\code{$process_single_domain(processor = NULL, domain_key = NULL, rater = NULL)}}{Process a single domain.}
\item{\code{$generate_report(template = "template.qmd", output_file = NULL, format = c("pdf","html","docx"))}}{Render the report.}
\item{\code{$run_full_workflow(domains = NULL, age_group = NULL, load_data = TRUE, generate_report = TRUE)}}{Run the end-to-end workflow.}
\item{\code{$detect_age_group()}}{Infer age group if not provided.}
\item{\code{$validate_domains(domains)}}{Check domain keys against available data.}
\item{\code{$show_summary()}}{Print a summary of processing and outputs.}
\item{\code{$get_available_domains()}}{List available domains detected.}
\item{\code{$get_status()}}{Return current status as a structured list.}
}
}

\section{Parameters (for methods above)}{

\describe{
\item{\code{config_file}}{Path to YAML/JSON config.}
\item{\code{variables_file}}{Optional path to variables YAML/JSON.}
\item{\code{verbose}}{Logical; when \code{TRUE}, print progress.}
\item{\code{data_dir}}{Directory containing input data.}
\item{\code{use_duckdb}}{Logical; when \code{TRUE}, use DuckDB backend.}
\item{\code{output_format}}{Preferred normalized storage: \code{"parquet"}, \code{"arrow"}, or \code{"csv"}.}
\item{\code{domains}}{Character vector of domains to process.}
\item{\code{age_group}}{Either \code{"child"} or \code{"adult"}.}
\item{\code{include_multi_rater}}{Logical; include multi-rater behavioral measures if \code{TRUE}.}
\item{\code{processor}}{Optional domain processor instance.}
\item{\code{domain_key}}{Domain key/name to process.}
\item{\code{rater}}{Optional rater ID (e.g., \code{"self"}, \code{"parent"}, \code{"teacher"}).}
\item{\code{template}}{Path to Quarto/Typst template.}
\item{\code{output_file}}{Optional explicit report output path.}
\item{\code{format}}{Output format, typically one of \code{"pdf"}, \code{"html"}, or \code{"docx"}.}
\item{\code{load_data}}{Logical; when \code{TRUE}, load/register data inside \code{$run_full_workflow()}.}
\item{\code{generate_report}}{Logical; when \code{TRUE}, render the report inside \code{$run_full_workflow()}.}
}
}

\examples{
\dontrun{
n2 <- Neuro2MainR6$new(config_file = "config.yml")
n2$setup()
n2$run_full_workflow(domains = c("memory","attention"))
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{config}}{Configuration manager object}

\item{\code{error_handler}}{Error handler object}

\item{\code{factory}}{Domain processor factory object}

\item{\code{processors}}{List of domain processors}

\item{\code{status}}{Status tracking list}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Neuro2MainR6-new}{\code{Neuro2MainR6$new()}}
\item \href{#method-Neuro2MainR6-setup}{\code{Neuro2MainR6$setup()}}
\item \href{#method-Neuro2MainR6-check_environment}{\code{Neuro2MainR6$check_environment()}}
\item \href{#method-Neuro2MainR6-load_data}{\code{Neuro2MainR6$load_data()}}
\item \href{#method-Neuro2MainR6-process_domains}{\code{Neuro2MainR6$process_domains()}}
\item \href{#method-Neuro2MainR6-process_single_domain}{\code{Neuro2MainR6$process_single_domain()}}
\item \href{#method-Neuro2MainR6-generate_report}{\code{Neuro2MainR6$generate_report()}}
\item \href{#method-Neuro2MainR6-run_full_workflow}{\code{Neuro2MainR6$run_full_workflow()}}
\item \href{#method-Neuro2MainR6-detect_age_group}{\code{Neuro2MainR6$detect_age_group()}}
\item \href{#method-Neuro2MainR6-validate_domains}{\code{Neuro2MainR6$validate_domains()}}
\item \href{#method-Neuro2MainR6-show_summary}{\code{Neuro2MainR6$show_summary()}}
\item \href{#method-Neuro2MainR6-get_available_domains}{\code{Neuro2MainR6$get_available_domains()}}
\item \href{#method-Neuro2MainR6-get_status}{\code{Neuro2MainR6$get_status()}}
\item \href{#method-Neuro2MainR6-clone}{\code{Neuro2MainR6$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-new"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$new(
  config_file = "config.yml",
  variables_file = "_variables.yml",
  verbose = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-setup"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-setup}{}}}
\subsection{Method \code{setup()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$setup()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-check_environment"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-check_environment}{}}}
\subsection{Method \code{check_environment()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$check_environment()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-load_data"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-load_data}{}}}
\subsection{Method \code{load_data()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$load_data(
  data_dir = NULL,
  use_duckdb = NULL,
  output_format = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-process_domains"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-process_domains}{}}}
\subsection{Method \code{process_domains()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$process_domains(
  domains = NULL,
  age_group = NULL,
  include_multi_rater = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-process_single_domain"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-process_single_domain}{}}}
\subsection{Method \code{process_single_domain()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$process_single_domain(processor, domain_key, rater = "self")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-generate_report"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-generate_report}{}}}
\subsection{Method \code{generate_report()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$generate_report(
  template = NULL,
  output_file = NULL,
  format = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-run_full_workflow"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-run_full_workflow}{}}}
\subsection{Method \code{run_full_workflow()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$run_full_workflow(
  domains = NULL,
  age_group = NULL,
  load_data = TRUE,
  generate_report = TRUE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-detect_age_group"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-detect_age_group}{}}}
\subsection{Method \code{detect_age_group()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$detect_age_group()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-validate_domains"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-validate_domains}{}}}
\subsection{Method \code{validate_domains()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$validate_domains(domains)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-show_summary"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-show_summary}{}}}
\subsection{Method \code{show_summary()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$show_summary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-get_available_domains"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-get_available_domains}{}}}
\subsection{Method \code{get_available_domains()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$get_available_domains()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-get_status"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-get_status}{}}}
\subsection{Method \code{get_status()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$get_status()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neuro2MainR6-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Neuro2MainR6-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neuro2MainR6$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
