% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DomainProcessorR6.R
\name{DomainProcessorR6}
\alias{DomainProcessorR6}
\title{DomainProcessorR6 Class}
\description{
DomainProcessorR6 Class

DomainProcessorR6 Class
}
\details{
An R6 class that encapsulates a complete data processing pipeline for neuropsychological domains.
This class handles loading data, filtering by domain, processing, and outputting results in various formats.
}
\section{Methods}{

\describe{
  \item{initialize}{Initialize a new DomainProcessorR6 object with configuration parameters.}
  \item{load_data}{Load data from the specified input file.}
  \item{filter_by_domain}{Filter data to include only the specified domains.}
  \item{select_columns}{Select relevant columns from the data.}
  \item{save_data}{Save the processed data to a CSV file.}
  \item{get_scales}{Get scale names for the specified phenotype.}
  \item{filter_by_test}{Filter data by test names for specific report types.}
  \item{generate_report}{Generate text reports for different report types.}
  \item{process}{Run the complete processing pipeline.}
}
}

\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{domains}}{Character vector of domain names to process.}

\item{\code{pheno}}{Target phenotype identifier string.}

\item{\code{input_file}}{Path to the input CSV file (neurocog.csv, neurobehav.csv, or validity.csv).}

\item{\code{output_dir}}{Directory where output files will be saved (default: "data").}

\item{\code{scale_source}}{Source of scales information (default: NULL, will use package internal data).}

\item{\code{test_filters}}{List of test filters for different report types (default: NULL).}

\item{\code{data}}{The loaded and processed data.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DomainProcessorR6-new}{\code{DomainProcessorR6$new()}}
\item \href{#method-DomainProcessorR6-load_data}{\code{DomainProcessorR6$load_data()}}
\item \href{#method-DomainProcessorR6-filter_by_domain}{\code{DomainProcessorR6$filter_by_domain()}}
\item \href{#method-DomainProcessorR6-select_columns}{\code{DomainProcessorR6$select_columns()}}
\item \href{#method-DomainProcessorR6-save_data}{\code{DomainProcessorR6$save_data()}}
\item \href{#method-DomainProcessorR6-get_scales}{\code{DomainProcessorR6$get_scales()}}
\item \href{#method-DomainProcessorR6-filter_by_test}{\code{DomainProcessorR6$filter_by_test()}}
\item \href{#method-DomainProcessorR6-generate_report}{\code{DomainProcessorR6$generate_report()}}
\item \href{#method-DomainProcessorR6-process}{\code{DomainProcessorR6$process()}}
\item \href{#method-DomainProcessorR6-clone}{\code{DomainProcessorR6$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-new"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new DomainProcessorR6 object with configuration parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$new(
  domains,
  pheno,
  input_file,
  output_dir = "data",
  scale_source = NULL,
  test_filters = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{domains}}{Character vector of domain names to process.}

\item{\code{pheno}}{Target phenotype identifier string.}

\item{\code{input_file}}{Path to the input CSV file (neurocog.csv, neurobehav.csv, or validity.csv).}

\item{\code{output_dir}}{Directory where output files will be saved (default: "data").}

\item{\code{scale_source}}{Source of scales information (default: NULL, will use package internal data).}

\item{\code{test_filters}}{List of test filters for different report types (default: NULL).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new DomainProcessorR6 object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-load_data"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-load_data}{}}}
\subsection{Method \code{load_data()}}{
Load data from the specified input file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$load_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns self for method chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-filter_by_domain"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-filter_by_domain}{}}}
\subsection{Method \code{filter_by_domain()}}{
Filter data to include only the specified domains.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$filter_by_domain()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns self for method chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-select_columns"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-select_columns}{}}}
\subsection{Method \code{select_columns()}}{
Select relevant columns from the data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$select_columns()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns self for method chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-save_data"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-save_data}{}}}
\subsection{Method \code{save_data()}}{
Save the processed data to a CSV file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$save_data(filename = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filename}}{Optional custom filename (default: based on pheno).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns self for method chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-get_scales"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-get_scales}{}}}
\subsection{Method \code{get_scales()}}{
Get scale names for the specified phenotype.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$get_scales()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of scale names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-filter_by_test"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-filter_by_test}{}}}
\subsection{Method \code{filter_by_test()}}{
Filter data by test names for specific report types.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$filter_by_test(report_type = "self_report")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{report_type}}{Type of report to filter for ("self_report", "observer", "performance").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A filtered data frame.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-generate_report"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-generate_report}{}}}
\subsection{Method \code{generate_report()}}{
Generate text reports for different report types.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$generate_report(
  report_type = "self_report",
  output_file = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{report_type}}{Type of report to generate ("self_report", "observer", "performance").}

\item{\code{output_file}}{Output file path for the report.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns self for method chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-process"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-process}{}}}
\subsection{Method \code{process()}}{
Run the complete processing pipeline.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$process(
  generate_reports = TRUE,
  report_types = c("self_report")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{generate_reports}}{Whether to generate text reports (default: TRUE).}

\item{\code{report_types}}{Vector of report types to generate (default: c("self_report")).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns self for method chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
