% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DomainProcessorR6.R
\name{DomainProcessorR6}
\alias{DomainProcessorR6}
\title{Simplified DomainProcessorR6 Class}
\description{
Simplified DomainProcessorR6 Class

Simplified DomainProcessorR6 Class
}
\details{
A streamlined R6 class for processing neuropsychological domain data.
Uses a systematic lookup table approach instead of hardcoded logic.
}
\section{Methods}{

\describe{
\item{\code{initialize(domains, pheno, input_file, output_dir, age_group, test_lookup_file)}}{Initialize the processor.}
\item{\code{load_test_lookup(file)}}{Load the test lookup table from CSV.}
\item{\code{get_available_raters()}}{Get available raters for the configured domains.}
\item{\code{get_tests_for_rater(rater)}}{Get tests for a specific rater.}
\item{\code{has_multiple_raters()}}{Check if domain has multiple raters.}
\item{\code{load_data()}}{Load and filter data from file.}
\item{\code{filter_by_domain()}}{Filter data by configured domains.}
\item{\code{filter_by_rater(rater)}}{Filter data by specific rater.}
\item{\code{select_columns()}}{Select relevant columns from data.}
\item{\code{save_data(filename, format)}}{Save processed data to file.}
\item{\code{generate_simple_domain_qmd(output_file)}}{Generate QMD file for single-rater domain.}
\item{\code{generate_multi_rater_domain_qmd(output_file)}}{Generate QMD file for multi-rater domain.}
\item{\code{get_domain_number()}}{Get domain number for file naming.}
\item{\code{process(generate_qmd)}}{Main processing pipeline.}
}
}

\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{domains}}{Character vector of domain names to process.}

\item{\code{pheno}}{Target phenotype identifier string.}

\item{\code{input_file}}{Path to the input data file.}

\item{\code{output_dir}}{Directory where output files will be saved.}

\item{\code{data}}{The loaded and processed data.}

\item{\code{test_lookup}}{Lookup table for tests, raters, and age groups.}

\item{\code{age_group}}{Age group for processing ("adult" or "child").}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DomainProcessorR6-new}{\code{DomainProcessorR6$new()}}
\item \href{#method-DomainProcessorR6-load_test_lookup}{\code{DomainProcessorR6$load_test_lookup()}}
\item \href{#method-DomainProcessorR6-get_available_raters}{\code{DomainProcessorR6$get_available_raters()}}
\item \href{#method-DomainProcessorR6-get_tests_for_rater}{\code{DomainProcessorR6$get_tests_for_rater()}}
\item \href{#method-DomainProcessorR6-has_multiple_raters}{\code{DomainProcessorR6$has_multiple_raters()}}
\item \href{#method-DomainProcessorR6-load_data}{\code{DomainProcessorR6$load_data()}}
\item \href{#method-DomainProcessorR6-filter_by_domain}{\code{DomainProcessorR6$filter_by_domain()}}
\item \href{#method-DomainProcessorR6-filter_by_rater}{\code{DomainProcessorR6$filter_by_rater()}}
\item \href{#method-DomainProcessorR6-select_columns}{\code{DomainProcessorR6$select_columns()}}
\item \href{#method-DomainProcessorR6-save_data}{\code{DomainProcessorR6$save_data()}}
\item \href{#method-DomainProcessorR6-generate_simple_domain_qmd}{\code{DomainProcessorR6$generate_simple_domain_qmd()}}
\item \href{#method-DomainProcessorR6-generate_multi_rater_domain_qmd}{\code{DomainProcessorR6$generate_multi_rater_domain_qmd()}}
\item \href{#method-DomainProcessorR6-get_domain_number}{\code{DomainProcessorR6$get_domain_number()}}
\item \href{#method-DomainProcessorR6-process}{\code{DomainProcessorR6$process()}}
\item \href{#method-DomainProcessorR6-clone}{\code{DomainProcessorR6$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-new"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-new}{}}}
\subsection{Method \code{new()}}{
Initialize the processor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$new(
  domains,
  pheno,
  input_file,
  output_dir = "data",
  age_group = "adult",
  test_lookup_file = "test_testname_rater.csv"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{domains}}{Character vector of domain names to process.}

\item{\code{pheno}}{Target phenotype identifier string.}

\item{\code{input_file}}{Path to the input data file.}

\item{\code{output_dir}}{Directory where output files will be saved.}

\item{\code{age_group}}{Age group for processing ("adult" or "child").}

\item{\code{test_lookup_file}}{Path to the test lookup CSV file.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new DomainProcessorR6 object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-load_test_lookup"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-load_test_lookup}{}}}
\subsection{Method \code{load_test_lookup()}}{
Load the test lookup table from CSV
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$load_test_lookup(file = "test_testname_rater.csv")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{Path to the test lookup CSV file.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible(self)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-get_available_raters"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-get_available_raters}{}}}
\subsection{Method \code{get_available_raters()}}{
Get available raters for this domain
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$get_available_raters()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character vector of available raters
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-get_tests_for_rater"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-get_tests_for_rater}{}}}
\subsection{Method \code{get_tests_for_rater()}}{
Get tests for a specific rater
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$get_tests_for_rater(rater)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{rater}}{The rater type (e.g., "self", "parent", "teacher", "observer").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character vector of test names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-has_multiple_raters"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-has_multiple_raters}{}}}
\subsection{Method \code{has_multiple_raters()}}{
Check if domain has multiple raters
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$has_multiple_raters()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Logical value indicating if multiple raters exist
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-load_data"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-load_data}{}}}
\subsection{Method \code{load_data()}}{
Load and filter data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$load_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
invisible(self)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-filter_by_domain"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-filter_by_domain}{}}}
\subsection{Method \code{filter_by_domain()}}{
Filter data by domain
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$filter_by_domain()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
invisible(self)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-filter_by_rater"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-filter_by_rater}{}}}
\subsection{Method \code{filter_by_rater()}}{
Filter data by rater (using test lookup)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$filter_by_rater(rater)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{rater}}{The rater type to filter by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Filtered data frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-select_columns"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-select_columns}{}}}
\subsection{Method \code{select_columns()}}{
Select relevant columns
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$select_columns()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
invisible(self)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-save_data"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-save_data}{}}}
\subsection{Method \code{save_data()}}{
Save processed data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$save_data(filename = NULL, format = "csv")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filename}}{Optional filename for output.}

\item{\code{format}}{Output format ("csv" or "parquet").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible(self)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-generate_simple_domain_qmd"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-generate_simple_domain_qmd}{}}}
\subsection{Method \code{generate_simple_domain_qmd()}}{
Generate QMD file for single-rater domain
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$generate_simple_domain_qmd(output_file = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{output_file}}{Optional output file path.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The path to the generated file
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-generate_multi_rater_domain_qmd"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-generate_multi_rater_domain_qmd}{}}}
\subsection{Method \code{generate_multi_rater_domain_qmd()}}{
Generate QMD file for multi-rater domain
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$generate_multi_rater_domain_qmd(output_file = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{output_file}}{Optional output file path.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The path to the generated file
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-get_domain_number"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-get_domain_number}{}}}
\subsection{Method \code{get_domain_number()}}{
Get domain number for file naming
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$get_domain_number()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character string with domain number
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-process"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-process}{}}}
\subsection{Method \code{process()}}{
Main processing pipeline
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$process(generate_qmd = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{generate_qmd}}{Whether to generate QMD files.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible(self)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorR6-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorR6-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorR6$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
