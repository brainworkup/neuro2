% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DomainProcessorFactoryR6.R
\name{DomainProcessorFactoryR6}
\alias{DomainProcessorFactoryR6}
\title{Factory for Creating Domain Processors with Enhanced Error Handling}
\description{
Factory class for creating domain processors with smart defaults,
validation, and comprehensive error handling.
}
\details{
DomainProcessorFactoryR6 Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{config}}{Configuration object for the factory}

\item{\code{error_handler}}{Error handler instance for managing errors}

\item{\code{registry}}{Registry of available domain configurations}

\item{\code{logger}}{Logger instance for logging messages}

\item{\code{validators}}{Validators for input validation}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DomainProcessorFactoryR6-new}{\code{DomainProcessorFactoryR6$new()}}
\item \href{#method-DomainProcessorFactoryR6-create_processor}{\code{DomainProcessorFactoryR6$create_processor()}}
\item \href{#method-DomainProcessorFactoryR6-create_multi_processor}{\code{DomainProcessorFactoryR6$create_multi_processor()}}
\item \href{#method-DomainProcessorFactoryR6-batch_create}{\code{DomainProcessorFactoryR6$batch_create()}}
\item \href{#method-DomainProcessorFactoryR6-validate_domain_data}{\code{DomainProcessorFactoryR6$validate_domain_data()}}
\item \href{#method-DomainProcessorFactoryR6-get_registry_info}{\code{DomainProcessorFactoryR6$get_registry_info()}}
\item \href{#method-DomainProcessorFactoryR6-get_processor_config}{\code{DomainProcessorFactoryR6$get_processor_config()}}
\item \href{#method-DomainProcessorFactoryR6-clone}{\code{DomainProcessorFactoryR6$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorFactoryR6-new"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorFactoryR6-new}{}}}
\subsection{Method \code{new()}}{
Initialize factory with configuration
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorFactoryR6$new(
  config = NULL,
  error_handler = NULL,
  logger = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{Configuration object (optional)}

\item{\code{error_handler}}{Error handler instance (optional)}

\item{\code{logger}}{Logger instance (optional)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new DomainProcessorFactoryR6 object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorFactoryR6-create_processor"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorFactoryR6-create_processor}{}}}
\subsection{Method \code{create_processor()}}{
Create a domain processor with validation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorFactoryR6$create_processor(
  domain_key,
  age_group = "adult",
  rater = "self",
  custom_config = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{domain_key}}{Domain identifier (e.g., "iq", "academics")}

\item{\code{age_group}}{Age group ("adult" or "child")}

\item{\code{rater}}{Rater type ("self", "observer", "parent", "teacher")}

\item{\code{custom_config}}{Custom configuration to override defaults}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A DomainProcessorR6Combo object or NULL on error
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorFactoryR6-create_multi_processor"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorFactoryR6-create_multi_processor}{}}}
\subsection{Method \code{create_multi_processor()}}{
Create multi-rater processor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorFactoryR6$create_multi_processor(
  domain_key,
  age_group = "adult"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{domain_key}}{Domain identifier}

\item{\code{age_group}}{Age group ("adult" or "child")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of DomainProcessorR6Combo objects by rater
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorFactoryR6-batch_create"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorFactoryR6-batch_create}{}}}
\subsection{Method \code{batch_create()}}{
Batch create processors
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorFactoryR6$batch_create(
  domain_keys,
  age_group = "adult",
  include_multi_rater = TRUE,
  parallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{domain_keys}}{Vector of domain identifiers}

\item{\code{age_group}}{Age group ("adult" or "child")}

\item{\code{include_multi_rater}}{Whether to create multi-rater processors}

\item{\code{parallel}}{Whether to process in parallel (not yet implemented)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of processors
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorFactoryR6-validate_domain_data"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorFactoryR6-validate_domain_data}{}}}
\subsection{Method \code{validate_domain_data()}}{
Validate domain data availability
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorFactoryR6$validate_domain_data(domain_key, detailed = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{domain_key}}{Domain identifier}

\item{\code{detailed}}{Whether to perform detailed validation}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list with validation results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorFactoryR6-get_registry_info"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorFactoryR6-get_registry_info}{}}}
\subsection{Method \code{get_registry_info()}}{
Get registry information as data frame
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorFactoryR6$get_registry_info(format = "data.frame")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{format}}{Output format ("data.frame", "list", or "json")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Registry information in requested format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorFactoryR6-get_processor_config"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorFactoryR6-get_processor_config}{}}}
\subsection{Method \code{get_processor_config()}}{
Get processor configuration template
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorFactoryR6$get_processor_config(domain_key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{domain_key}}{Domain identifier}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Configuration template list
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DomainProcessorFactoryR6-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DomainProcessorFactoryR6-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DomainProcessorFactoryR6$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
